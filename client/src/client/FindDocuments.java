/**
 * 
 * @author Shimrit Hoori, Dror Ventura
 * This class handles the extraction of pdf, word, excel and text files from specific locations   
 *
 */

package client;

import java.io.File;
import java.io.IOException;
import java.util.Collection;

public class FindDocuments {
	
	/**
	 * Finds pdf, word, excel and text files from specific locations
	 * @param file	the folder to start searching from
	 * @param filesFound	list of files found
	 * @throws IOException
	 */
    public void getDocuments(File file, Collection<File> filesFound) throws IOException {
        File[] list = file.listFiles();
        if (list != null) {
            for (File userDirectory : list) {
                getDocumentsFromUser(userDirectory, filesFound);
            }
        }
    }

    /**
     * Adds Files from the root, desktop, documents and downloads folders, 
     * with docx, doc, pdf, xls, xlsx and txt extension to filesFound Collection of Files
     * @throws IOException  
     */
    public void getDocumentsFromUser(File file, Collection<File> filesFound) throws IOException {
        File[] list = file.listFiles();
        if (list != null) {
            for (File subFile : list) {
                if (subFile.isDirectory()) {
                    String directoryName = subFile.getName();
                    boolean relevantDir = directoryName.equalsIgnoreCase("desktop") ||
                            directoryName.equalsIgnoreCase("documents")||
                            directoryName.equalsIgnoreCase("downloads");
                    if (relevantDir)
                        findRelevantDocuments(subFile, filesFound);
                }
                else {
                    String fileExtension = getFileExtension(subFile.getName());

                    if (fileExtension.equalsIgnoreCase("docx")||
                        fileExtension.equalsIgnoreCase("doc") ||
                        fileExtension.equalsIgnoreCase("pdf") ||
                        fileExtension.equalsIgnoreCase("xls") ||
                        fileExtension.equalsIgnoreCase("xlsx") ||
                        fileExtension.equalsIgnoreCase("txt")) {
                        filesFound.add(subFile);
                    }
                }
            }
        }
    }

    /**
     * Adds Files with docx, doc, pdf, xls, xlsx and txt extension to filesFound Collection of Files
     */
    private void findRelevantDocuments(File file, Collection<File> filesFound) {
        File[] list = file.listFiles();
        if (list != null) {
            for (File subFile : list) {
                if (subFile.isDirectory())
                    findRelevantDocuments(subFile, filesFound);
                else {
                    String fileExtension = getFileExtension(subFile.getName());

                    if (fileExtension.equalsIgnoreCase("docx")||
                        fileExtension.equalsIgnoreCase("doc") ||
                        fileExtension.equalsIgnoreCase("pdf") ||
                        fileExtension.equalsIgnoreCase("xls") ||
                        fileExtension.equalsIgnoreCase("txt")) {
                    	filesFound.add(subFile);
                    }
                }
            }
        }
    }

    /** 
     * @param filename	the name of the file to get his extension  
     * @return	the file extension
     */
    private String getFileExtension(String filename) {
        String extension = "";

        int i = filename.lastIndexOf('.');
        if (i > 0) 
            extension = filename.substring(i+1);
        return extension;
    }
}
